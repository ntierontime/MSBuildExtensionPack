@using UrlStringsAlias = MSBuildExtensionPack.AspNetMvc40Rasor.Helpers.UrlStrings;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Linq.Expressions;
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using System.Web.Routing;
@using Framework.Mvc;
@using PagedList.Mvc;
@model MSBuildExtensionPack.AspNetMvc40ViewModel.WPCommonOfBuildLogVM
@{
    RouteValueDictionary queryStringDictionary = new RouteValueDictionary(Request.QueryString.AllKeys.ToDictionary(key => key, key => (object)Request.QueryString[key]));
}
 <div class="row">
 <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3">
        @using (Html.BeginForm())
        {
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <h3 style="display: inline;">@Framework.Resx.UIStringResource.Common_Filter</h3>
                </div>
                <div class="panel-footer nopadding">
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SearchToolBarUp" title="@Framework.Resx.UIStringResource.Search">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_BuildLog_AddNew, UrlStringsAlias.ControllerName_BuildLog)" class="btn btn-default" role="button" type="button" name="AddNewToolBarUp" title="@Framework.Resx.UIStringResource.AddNew">
        <span class="glyphicon glyphicon-plus"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_BuildLog_WPCommonOfBuildLog_Export, UrlStringsAlias.ControllerName_BuildLog, new RouteValueDictionary { { "dataServiceType", "Csv" } })'" class="btn btn-default" role="button" type="button" name="ExportToolBarUp" title="@Framework.Resx.UIStringResource.Export">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_BuildLog_WPCommonOfBuildLog_Export, UrlStringsAlias.ControllerName_BuildLog, new RouteValueDictionary { { "dataServiceType", "Excel2010" } })'" class="btn btn-default" role="button" type="button" name="ExportToExcelToolBarUp" title="@Framework.Resx.UIStringResource.ExportToExcel">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_BuildLog_Import, UrlStringsAlias.ControllerName_BuildLog)" class="btn btn-default" role="button" type="button" name="ImportToolBarUp" title="@Framework.Resx.UIStringResource.Import">
        <span class="glyphicon glyphicon-import"></span>
    </a>
</div>
</div>
                </div>
                <div class="panel-body">
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfBuildEventCode_1OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfBuildEventCode_1.NullableValueToCompare, (List<SelectListItem>)Model.SelectListOfMSBuildExtensionPack_BuildEventCode, MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildEventCode.Please_select_BuildEventCode____, new Dictionary<string,Object>{ { "class", "form-control" } })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfOrganization_2OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_2.NullableValueToCompare, (List<SelectListItem>)Model.SelectListOfMSBuildExtensionPack_Organization, MSBuildExtensionPack.Resx.UIStringResourcePerEntityOrganization.Please_select_Organization____, new Dictionary<string,Object>{ { "class", "form-control" }, { "onchange", "FetchOrganization_1();" } })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfOrganization_1OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_1.NullableValueToCompare, Enumerable.Empty<SelectListItem>(), MSBuildExtensionPack.Resx.UIStringResourcePerEntityOrganization.Please_select_Organization____, new Dictionary<string,Object>{ { "class", "form-control" }, { "onchange", "FetchSolution_1();" }, { "data-bind", string.Format(@"options:selectListOfvalueToCompareIdCommonOfOrganization_1OfCommon,optionsCaption:'{0}',optionsText:'name',optionsValue:'value',value:selectedvalueToCompareIdCommonOfOrganization_1OfCommon", MSBuildExtensionPack.Resx.UIStringResourcePerEntityOrganization.Please_select_Organization____) } })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfSolution_1OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfSolution_1.NullableValueToCompare, Enumerable.Empty<SelectListItem>(), MSBuildExtensionPack.Resx.UIStringResourcePerEntitySolution.Please_select_Solution____, new Dictionary<string,Object>{ { "class", "form-control" }, { "onchange", "FetchBuild_1();" }, { "data-bind", string.Format(@"options:selectListOfvalueToCompareIdCommonOfSolution_1OfCommon,optionsCaption:'{0}',optionsText:'name',optionsValue:'value',value:selectedvalueToCompareIdCommonOfSolution_1OfCommon", MSBuildExtensionPack.Resx.UIStringResourcePerEntitySolution.Please_select_Solution____) } })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfBuild_1OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfBuild_1.NullableValueToCompare, Enumerable.Empty<SelectListItem>(), MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Please_select_Build____, new Dictionary<string,Object>{ { "class", "form-control" }, { "data-bind", string.Format(@"options:selectListOfvalueToCompareIdCommonOfBuild_1OfCommon,optionsCaption:'{0}',optionsText:'name',optionsValue:'value',value:selectedvalueToCompareIdCommonOfBuild_1OfCommon", MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Please_select_Build____) } })
</div>
                    <div class="form-group form-inline">
                        <label class="control-label">Items per page : </label>
                        @Html.DropDownListFor(model => model.QueryPagingSetting.PageSize, Model.UISharedViewModel.SelectListOfPageSize, new Dictionary<string, Object> { { "class", "form-control" }, { "onchange", "this.form.submit();" } })
                    </div>
                    <div class="form-group form-inline">
                        <label class="control-label">Sort by:</label>
                        @Html.DropDownListFor(model => model.QueryOrderBySettingCollecionInString, Model.UISharedViewModel.SelectListOfQueryOrderBySettingCollecionInString, new Dictionary<string, Object> { { "class", "form-control" }, { "onchange", "this.form.submit();" } })
                    </div>
                </div>
                <div class="panel-footer nopadding">
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SearchToolBarBottom" title="@Framework.Resx.UIStringResource.Search">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_BuildLog_AddNew, UrlStringsAlias.ControllerName_BuildLog)" class="btn btn-default" role="button" type="button" name="AddNewToolBarBottom" title="@Framework.Resx.UIStringResource.AddNew">
        <span class="glyphicon glyphicon-plus"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_BuildLog_WPCommonOfBuildLog_Export, UrlStringsAlias.ControllerName_BuildLog, new RouteValueDictionary { { "dataServiceType", "Csv" } })'" class="btn btn-default" role="button" type="button" name="ExportToolBarBottom" title="@Framework.Resx.UIStringResource.Export">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_BuildLog_WPCommonOfBuildLog_Export, UrlStringsAlias.ControllerName_BuildLog, new RouteValueDictionary { { "dataServiceType", "Excel2010" } })'" class="btn btn-default" role="button" type="button" name="ExportToExcelToolBarBottom" title="@Framework.Resx.UIStringResource.ExportToExcel">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_BuildLog_Import, UrlStringsAlias.ControllerName_BuildLog)" class="btn btn-default" role="button" type="button" name="ImportToolBarBottom" title="@Framework.Resx.UIStringResource.Import">
        <span class="glyphicon glyphicon-import"></span>
    </a>
</div>
</div>
                </div>
            </div>
        }
 </div>
 <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9 nopadding">
        <div class="panel panel-default">
            <div class="panel-heading clearfix">
                <h3 style="display: inline;">@Html.ActionLink(MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.BuildLog, "WPCommonOfBuildLog", "BuildLog")</h3>
            </div>
            <div class="table-responsive">
<table id="MasterDataControl1" name="MasterDataControl1" class="table table-hover table-bordered table-striped">
<thead>
 <tr><th  style="min-width:100px" class="hidden-xs visible-sm"></th>
<th >@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Build_1_Name</th>
<th >@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Solution_1_Name</th>
<th >@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Organization_1_UniqueidentifierColumn</th>
<th  class="hidden-xs visible-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Organization_1_UniqueIdentifier</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Organization_1_Name</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Organization_2_UniqueidentifierColumn</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Organization_2_UniqueIdentifier</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Organization_2_Name</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.BuildEventCode_1_Name</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.Message</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuildLog.EventTime</th>
<th  class="col-xs-4 col-sm-3 col-md-2 col-lg-2"></th></tr>
</thead>
<tbody>
    @if (Model != null && Model.StatusOfResult == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
    {
        int index = 0;
        foreach (var item in Model.Result)
        {
            index++;
<tr><td  style="min-width:100px" class="hidden-xs visible-sm"></td>
<td  class="col-xs-4 col-sm-3 col-md-2 col-lg-2"><div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_BuildLog_WPEntityRelatedOfBuildLog, UrlStringsAlias.ControllerName_BuildLog, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.Id })" class="btn btn-default" role="button" type="button" name="FullDetailsToolBarRightInList" title="@Framework.Resx.UIStringResource.FullDetails">
        <span class="glyphicon glyphicon-briefcase"></span>
    </a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_BuildLog_Edit, UrlStringsAlias.ControllerName_BuildLog, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.Id })" class="btn btn-default" role="button" type="button" name="EditToolBarRightInList" title="@Framework.Resx.UIStringResource.Edit">
        <span class="glyphicon glyphicon-edit"></span>
    </a>
</div>
</div></td>
<td >@Html.ActionLink(item.Build_1_Name, UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.BuildId }, null)</td>
<td >@Html.ActionLink(item.Solution_1_Name, UrlStringsAlias.ActionName_Solution_WPEntityRelatedOfSolution, UrlStringsAlias.ControllerName_Solution, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.Solution_1Id }, null)</td>
<td >@Html.ActionLink(item.Organization_1_Name, UrlStringsAlias.ActionName_Organization_WPEntityRelatedOfOrganization, UrlStringsAlias.ControllerName_Organization, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_1Id, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_1_UniqueIdentifier, isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_1_UniqueidentifierColumn }, null)</td>
<td >@Html.ActionLink(item.Organization_2_Name, UrlStringsAlias.ActionName_Organization_WPEntityRelatedOfOrganization, UrlStringsAlias.ControllerName_Organization, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_2Id, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_2_UniqueIdentifier, isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_2_UniqueidentifierColumn }, null)</td>
<td >@Html.ActionLink(item.BuildEventCode_1_Name, UrlStringsAlias.ActionName_BuildEventCode_WPEntityRelatedOfBuildEventCode, UrlStringsAlias.ControllerName_BuildEventCode, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.BuildEventCodeId }, null)</td>
<td >@Html.DisplayFor(modelItem => item.Message)</td>
<td >@Html.DisplayFor(modelItem => item.EventTime)</td></tr>
        }
    }
    else
    {
<tr><td colspan="50" ><div class="text-danger">@Model.StatusMessageOfResult</div>
</td></tr>
    }
</tbody>
</table>
            </div>
            <div class="pull-right">
    @if (Model.Result != null)
    {
        var pagedResult = (PagedList.StaticPagedList<MSBuildExtensionPack.DataSourceEntities.BuildLog.Default>)ViewBag.StaticPagedResult;
        <text>
            @Html.PagedListPager(pagedResult, currentPage => Url.Action(UrlStringsAlias.ActionName_BuildLog_WPCommonOfBuildLog, new { currentPage = currentPage }), PagedList.Mvc.PagedListRenderOptions.OnlyShowFivePagesAtATime)
        </text>
    }
            </div>
        </div>
 </div>
 </div>
@section Scripts {
    <script type="text/javascript">
        function FetchOrganization_1() {
            var selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly = $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_2.NullableValueToCompare"]').val();
            var url = "/api/OrganizationApi/GetCollectionOfNameValuePairOfByFKOnly";
            var params = BuildCriteriaForFetchOrganization_1(selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly);
            if(selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly)
            {
                try {
                    $.getJSON(url, params, function (data) {
                        objVM.selectListOfvalueToCompareIdCommonOfOrganization_1OfCommon(data);
                        objVM.selectedvalueToCompareIdCommonOfOrganization_1OfCommon(@Model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_1.ValueToCompare);
                    });
                }
                catch (e) {
                }
            }
        }
        function BuildCriteriaForFetchOrganization_1(selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly) {
            var params = {
                isToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly,
                currentIndex: -1,
                pageSize: -1,
                queryOrderByExpression: null
            };
            return params;
        }
        function FetchSolution_1() {
            var selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly = $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_1.NullableValueToCompare"]').val();
            var selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly = $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_2.NullableValueToCompare"]').val();
            var url = "/api/SolutionApi/GetCollectionOfNameValuePairOfByFKOnly";
            var params = BuildCriteriaForFetchSolution_1(selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly,selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly);
            if(selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly && selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly)
            {
                try {
                    $.getJSON(url, params, function (data) {
                        objVM.selectListOfvalueToCompareIdCommonOfSolution_1OfCommon(data);
                        objVM.selectedvalueToCompareIdCommonOfSolution_1OfCommon(@Model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfSolution_1.ValueToCompare);
                    });
                }
                catch (e) {
                }
            }
        }
        function BuildCriteriaForFetchSolution_1(selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly,selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly) {
            var params = {
                isToCompareIdByFKOnlyOfOrganization_1OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly,
                isToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly,
                currentIndex: -1,
                pageSize: -1,
                queryOrderByExpression: null
            };
            return params;
        }
        function FetchBuild_1() {
            var url = "/api/BuildApi/GetCollectionOfNameValuePairOfByFKOnly";
                try {
                    var params = BuildCriteriaForFetchBuild_1();
                    $.getJSON(url, params, function (data) {
                        objVM.selectListOfvalueToCompareIdCommonOfBuild_1OfCommon(data);
                        objVM.selectedvalueToCompareIdCommonOfBuild_1OfCommon(@Model.Criteria.BuildLogQueryCriteriaCommon.IdCommonOfBuild_1.ValueToCompare);
                        });
                }
                catch (e) {
                }
        }
        function BuildCriteriaForFetchBuild_1() {
            var selectedvalueToCompareIdByFKOnlyOfSolution_1OfByFKOnly = $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfSolution_1.NullableValueToCompare"]').val();
            var selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly = $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_1.NullableValueToCompare"]').val();
            var selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly = $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_2.NullableValueToCompare"]').val();
            var params = {
                isToCompareIdByFKOnlyOfSolution_1OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfSolution_1OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfSolution_1OfByFKOnly,
                isToCompareIdByFKOnlyOfOrganization_1OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfOrganization_1OfByFKOnly,
                isToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly,
                currentIndex: -1,
                pageSize: -1,
                queryOrderByExpression: null
            };
            return params;
        }
        //cascaded dropdownlist by knockoutjs
        function CascadingDDLViewModel() {
            var self = this;
            self.selectListOfvalueToCompareIdCommonOfOrganization_1OfCommon = ko.observableArray([]);
            self.selectedvalueToCompareIdCommonOfOrganization_1OfCommon = ko.observable();
            self.selectListOfvalueToCompareIdCommonOfSolution_1OfCommon = ko.observableArray([]);
            self.selectedvalueToCompareIdCommonOfSolution_1OfCommon = ko.observable();
            self.selectListOfvalueToCompareIdCommonOfBuild_1OfCommon = ko.observableArray([]);
            self.selectedvalueToCompareIdCommonOfBuild_1OfCommon = ko.observable();
        }
        var objVM = new CascadingDDLViewModel();
        ko.applyBindings(objVM);
        $('select[name="Criteria.BuildLogQueryCriteriaCommon.IdCommonOfOrganization_2.NullableValueToCompare"]').change();
    </script>
}
