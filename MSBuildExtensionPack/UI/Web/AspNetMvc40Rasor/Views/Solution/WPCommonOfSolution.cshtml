@using UrlStringsAlias = MSBuildExtensionPack.AspNetMvc40Rasor.Helpers.UrlStrings;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Linq.Expressions;
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using System.Web.Routing;
@using Framework.Mvc;
@using PagedList.Mvc;
@model MSBuildExtensionPack.AspNetMvc40ViewModel.WPCommonOfSolutionVM
@{
    RouteValueDictionary queryStringDictionary = new RouteValueDictionary(Request.QueryString.AllKeys.ToDictionary(key => key, key => (object)Request.QueryString[key]));
}
 <div class="row">
 <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3">
        @using (Html.BeginForm())
        {
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <h3 style="display: inline;">@Framework.Resources.UIStringResource.Common_Filter</h3>
                </div>
                <div class="panel-footer nopadding">
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SearchToolBarUp" title="@Framework.Resources.UIStringResource.SearchAlternativeText">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Solution_AddNew, UrlStringsAlias.ControllerName_Solution)" class="btn btn-default" role="button" type="button" name="AddNewToolBarUp" title="@Framework.Resources.UIStringResource.AddNewAlternativeText">
		<span class="glyphicon glyphicon-plus"></span>
	</a>
</div>
<div class="btn-group">
	<a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Solution_WPCommonOfSolution_Export, UrlStringsAlias.ControllerName_Solution, new RouteValueDictionary { { "dataServiceType", "Csv" } })'" class="btn btn-default" role="button" type="button" name="ExportToolBarUp" title="@Framework.Resources.UIStringResource.ExportAlternativeText">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
	<a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Solution_WPCommonOfSolution_Export, UrlStringsAlias.ControllerName_Solution, new RouteValueDictionary { { "dataServiceType", "Excel2010" } })'" class="btn btn-default" role="button" type="button" name="ExportToExcelToolBarUp" title="@Framework.Resources.UIStringResource.ExportToExcelAlternativeText">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Solution_Import, UrlStringsAlias.ControllerName_Solution)" class="btn btn-default" role="button" type="button" name="ImportToolBarUp" title="@Framework.Resources.UIStringResource.ImportAlternativeText">
		<span class="glyphicon glyphicon-import"></span>
	</a>
</div>
</div>
                </div>
                <div class="panel-body">
 <div class="form-group">
</div>
<div class="form-group">
<div class="checkbox checkbox-info">
@Html.CheckBoxFor(model=>model.Criteria.IsToCompareDescriptionCommonOftOfCommon, new { @class="styled" })<label class="control-label">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.IsToCompare_ID_CheckBox_Search_isToCompareDescriptionCommonOftOfCommon</label>
</div>
@Html.TextBoxFor(model=>model.Criteria.ValueToBeContainedDescriptionCommonOftOfCommon, new { @class = "form-control" })
</div>
<div class="form-group">
<div class="checkbox checkbox-info">
@Html.CheckBoxFor(model=>model.Criteria.IsToCompareNameCommonOftOfCommon, new { @class="styled" })<label class="control-label">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.IsToCompare_ID_CheckBox_Search_isToCompareNameCommonOftOfCommon</label>
</div>
@Html.TextBoxFor(model=>model.Criteria.ValueToBeContainedNameCommonOftOfCommon, new { @class = "form-control" })
</div>
<div class="form-group">
<div class="checkbox checkbox-info">
@Html.CheckBoxFor(model=>model.Criteria.IsToCompareExternalParentIdCommonOftOfCommon, new { @class="styled" })<label class="control-label">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.IsToCompare_ID_CheckBox_Search_isToCompareExternalParentIdCommonOftOfCommon</label>
</div>
@Html.TextBoxFor(model=>model.Criteria.ValueToBeContainedExternalParentIdCommonOftOfCommon, new { @class = "form-control" })
</div>
<div class="form-group">
<div class="checkbox checkbox-info">
@Html.CheckBoxFor(model=>model.Criteria.IsToCompareIdCommonOfOrganization_2OfCommon, new { @class="styled" })<label class="control-label">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfOrganization_2OfCommon</label>
</div>
@Html.DropDownListFor(model => model.Criteria.ValueToCompareIdCommonOfOrganization_2OfCommon, (List<SelectListItem>)Model.SelectListOfMSBuildExtensionPack_Organization, MSBuildExtensionPack.Resources.UIStringResourcePerEntityOrganization.Please_select_Organization____, new Dictionary<string,Object>{ { "class", "form-control" }, { "onchange", "FetchOrganization_1();" } })
</div>
<div class="form-group">
<div class="checkbox checkbox-info">
@Html.CheckBoxFor(model=>model.Criteria.IsToCompareIdCommonOfOrganization_1OfCommon, new { @class="styled" })<label class="control-label">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfOrganization_1OfCommon</label>
</div>
@Html.DropDownListFor(model => model.Criteria.ValueToCompareIdCommonOfOrganization_1OfCommon, Enumerable.Empty<SelectListItem>(), MSBuildExtensionPack.Resources.UIStringResourcePerEntityOrganization.Please_select_Organization____, new Dictionary<string,Object>{ { "class", "form-control" }, { "data-bind", string.Format(@"options:selectListOfvalueToCompareIdCommonOfOrganization_1OfCommon,optionsCaption:'{0}',optionsText:'name',optionsValue:'value',value:selectedvalueToCompareIdCommonOfOrganization_1OfCommon", MSBuildExtensionPack.Resources.UIStringResourcePerEntityOrganization.Please_select_Organization____) } })
</div>
                    <div class="form-group form-inline">
                        <label class="control-label">Items per page : </label>
                        @Html.DropDownListFor(model => model.QueryPagingSetting.PageSize, Model.UISharedViewModel.SelectListOfPageSize, new Dictionary<string, Object> { { "class", "form-control" }, { "onchange", "this.form.submit();" } })
                    </div>
                    <div class="form-group form-inline">
                        <label class="control-label">Sort by:</label>
                        @Html.DropDownListFor(model => model.QueryOrderBySettingCollecionInString, Model.UISharedViewModel.SelectListOfQueryOrderBySettingCollecionInString, new Dictionary<string, Object> { { "class", "form-control" }, { "onchange", "this.form.submit();" } })
                    </div>
                </div>
                <div class="panel-footer nopadding">
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SearchToolBarBottom" title="@Framework.Resources.UIStringResource.SearchAlternativeText">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Solution_AddNew, UrlStringsAlias.ControllerName_Solution)" class="btn btn-default" role="button" type="button" name="AddNewToolBarBottom" title="@Framework.Resources.UIStringResource.AddNewAlternativeText">
		<span class="glyphicon glyphicon-plus"></span>
	</a>
</div>
<div class="btn-group">
	<a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Solution_WPCommonOfSolution_Export, UrlStringsAlias.ControllerName_Solution, new RouteValueDictionary { { "dataServiceType", "Csv" } })'" class="btn btn-default" role="button" type="button" name="ExportToolBarBottom" title="@Framework.Resources.UIStringResource.ExportAlternativeText">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
	<a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Solution_WPCommonOfSolution_Export, UrlStringsAlias.ControllerName_Solution, new RouteValueDictionary { { "dataServiceType", "Excel2010" } })'" class="btn btn-default" role="button" type="button" name="ExportToExcelToolBarBottom" title="@Framework.Resources.UIStringResource.ExportToExcelAlternativeText">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Solution_Import, UrlStringsAlias.ControllerName_Solution)" class="btn btn-default" role="button" type="button" name="ImportToolBarBottom" title="@Framework.Resources.UIStringResource.ImportAlternativeText">
		<span class="glyphicon glyphicon-import"></span>
	</a>
</div>
</div>
                </div>
            </div>
		}
 </div>
 <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9 nopadding">
        <div class="panel panel-default">
            <div class="panel-heading clearfix">
                <h3 style="display: inline;">@Html.ActionLink(MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Solution, "WPCommonOfSolution", "Solution")
            </div>
            <div class="table-responsive">
<table id="MasterDataControl1" name="MasterDataControl1" class="table table-hover table-bordered table-striped">
<thead>
 <tr><th  class="hidden-xs visible-sm"></th>
<th >@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Organization_1_UniqueIdentifier</th>
<th >@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Organization_1_UniqueidentifierColumn</th>
<th >@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Organization_1_Name</th>
<th  class="hidden-xs visible-smvisible-md visible-lg">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Organization_2_UniqueIdentifier</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Organization_2_UniqueidentifierColumn</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Organization_2_Name</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.ExternalParentId</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Name</th>
<th  class="hidden-xs hidden-sm visible-md visible-lg">@MSBuildExtensionPack.Resources.UIStringResourcePerEntitySolution.Description</th>
<th  class="col-xs-4 col-sm-3 col-md-2 col-lg-2"></th></tr>
</thead>
<tbody>
    @if (Model != null && Model.StatusOfResult == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
    {
		int index = 0;
        foreach (var item in Model.Result)
        {
			index++;
<tr><td  class="hidden-xs visible-sm"></td>
<td >@Html.DisplayFor(modelItem => item.Organization_1_UniqueIdentifier)</td>
<td >@Html.DisplayFor(modelItem => item.Organization_1_UniqueidentifierColumn)</td>
<td >@Html.ActionLink(item.Organization_1_Name, UrlStringsAlias.ActionName_Organization_WPEntityRelatedOfOrganization, UrlStringsAlias.ControllerName_Organization, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.OrganizationId, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_1_UniqueIdentifier, isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_1_UniqueidentifierColumn }, null)</td>
<td >@Html.DisplayFor(modelItem => item.Organization_2_UniqueIdentifier)</td>
<td >@Html.DisplayFor(modelItem => item.Organization_2_UniqueidentifierColumn)</td>
<td >@Html.ActionLink(item.Organization_2_Name, UrlStringsAlias.ActionName_Organization_WPEntityRelatedOfOrganization, UrlStringsAlias.ControllerName_Organization, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_2Id, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_2_UniqueIdentifier, isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=true, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = item.Organization_2_UniqueidentifierColumn }, null)</td>
<td >@Html.DisplayFor(modelItem => item.ExternalParentId)</td>
<td >@Html.DisplayFor(modelItem => item.Name)</td>
<td >@Html.DisplayFor(modelItem => item.Description)</td>
<td  class="col-xs-4 col-sm-3 col-md-2 col-lg-2"><div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Solution_WPEntityRelatedOfSolution, UrlStringsAlias.ControllerName_Solution, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.Id })" class="btn btn-default" role="button" type="button" name="FullDetailsToolBarRightInList" title="@Framework.Resources.UIStringResource.FullDetailsAlternativeText">
		<span class="glyphicon glyphicon-briefcase"></span>
	</a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Solution_Edit, UrlStringsAlias.ControllerName_Solution, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = item.Id })" class="btn btn-default" role="button" type="button" name="EditToolBarRightInList" title="@Framework.Resources.UIStringResource.EditAlternativeText">
        <span class="glyphicon glyphicon-edit"></span>
    </a>
</div>
</div></td></tr>
        }
    }
    else
    {
<tr><td colspan="50" ><div class="text-danger">@Model.StatusMessageOfResult</div>
</td></tr>
    }
</tbody>
</table>
            </div>
            <div class="pull-right">
    @if (Model.Result != null)
    {
        var pagedResult = (PagedList.StaticPagedList<MSBuildExtensionPack.DataSourceEntities.Solution.Default>)ViewBag.StaticPagedResult;
        <text>
            @Html.PagedListPager(pagedResult, currentPage => Url.Action(UrlStringsAlias.ActionName_Solution_WPCommonOfSolution, new { currentPage = currentPage }), PagedList.Mvc.PagedListRenderOptions.OnlyShowFivePagesAtATime)
        </text>
    }
            </div>
        </div>
 </div>
 </div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready($(function() {
        }));
        $(document).ready($(function() {
            $.validator.addMethod(
                "date",
                function(value, element) {
                    var bits = value.match(/([0-9]+)/gi), str;
                    if (!bits)
                        return this.optional(element) || false;
                    str = bits[1] + '/' + bits[0] + '/' + bits[2];
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(str));
                },
                "Please enter a date in the format dd/mm/yyyy"
            );
            $("form").validate({
                onkeyup: false,
                errorPlacement: function(error, element) {
                    if (element.attr("name").indexOf("DOB") >= 0) {
                        error.insertAfter("#DOB_Day");
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                },
                messages: {
                },
                highlight:
                    function(element) {
                        $(element).css('border', '2px solid red');
                    },
                unhighlight:
                    function(element) {
                        $(element).css('border', '1px solid rgb(170, 170, 170)');
                    },
                errorLabelContainer: "#ErrorList",
                wrapper: "li",
            });
        }));
        function FetchOrganization_1() {
			var selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly = $("#Criteria_ValueToCompareIdCommonOfOrganization_1OfCommon").val();
			var selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly = $("#Criteria_ValueToCompareIdCommonOfOrganization_2OfCommon").val();
            var url = "/api/OrganizationApi/GetCollectionOfNameValuePairOfByFKOnly";
            var params = BuildCriteriaForFetchOrganization_1(selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly);
            if(selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly)
            {
                $.getJSON(url, params, function (data) {
                    objVM.selectListOfvalueToCompareIdCommonOfOrganization_1OfCommon(data);
                    if(0 != @(Model.Criteria.ValueToCompareIdCommonOfOrganization_1OfCommon.HasValue ? Model.Criteria.ValueToCompareIdCommonOfOrganization_1OfCommon.Value : default(System.Int64)))
                    {
                        objVM.selectedvalueToCompareIdCommonOfOrganization_1OfCommon(@Model.Criteria.ValueToCompareIdCommonOfOrganization_1OfCommon);
                    }
                });
            }
        }
        function BuildCriteriaForFetchOrganization_1(selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly) {
            var params = {
                isToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: true,
                valueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly: selectedvalueToCompareIdByFKOnlyOfOrganization_2OfByFKOnly,
                currentIndex: -1,
                pageSize: -1,
                queryOrderByExpression: null
            };
            return params;
        }
        //cascaded dropdownlist by knockoutjs
        function CascadingDDLViewModel() {
            var self = this;
            self.selectListOfvalueToCompareIdCommonOfOrganization_1OfCommon = ko.observableArray([]);
            self.selectedvalueToCompareIdCommonOfOrganization_1OfCommon = ko.observable();
        }
        var objVM = new CascadingDDLViewModel();
        ko.applyBindings(objVM);
$("#Criteria_ValueToCompareValueToCompareIdCommonOfOrganization_2OfCommon").change();
    </script>
}
