@using UrlStringsAlias = MSBuildExtensionPack.AspNetMvc40Rasor.Helpers.UrlStrings;
@model MSBuildExtensionPack.AspNetMvc40ViewModel.OrganizationItemVM
<div class="row">
    <div class="col-sm-12 col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2>@Model.ContentData.Title.</h2>
                <h4>@Model.ContentData.Summary</h4>
            </div>
            <div class="panel-body">
@if (Model.StatusOfResult != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK && Model.StatusOfResult != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.UIProcessReady)
{
                <div class="text-danger">@Model.StatusMessageOfResult</div>
}
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.Id, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.Id)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.CreatedDateTime, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.CreatedDateTime)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.ParentId, new { @class = "control-label" })
                        @Html.ActionLink(Model.Item.Organization_2_Name, UrlStringsAlias.ActionName_Organization_WPEntityRelatedOfOrganization, UrlStringsAlias.ControllerName_Organization, new { id = Model.Item.ParentId, uniqueIdentifier = Model.Item.Organization_2_UniqueIdentifier, uniqueidentifierColumn = Model.Item.Organization_2_UniqueidentifierColumn }, null)
                </div>
                <div class="form-group" >
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.IsSystemBuiltIn) @Html.DisplayNameFor(model => model.Item.IsSystemBuiltIn)
                        </div>
                </div>
                <div class="form-group" >
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.BitColumn) @Html.DisplayNameFor(model => model.Item.BitColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.Name, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.Name)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.UniqueIdentifier, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.UniqueIdentifier)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.CharColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.CharColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.VarcharColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.VarcharColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.TextColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.TextColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.NcharColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.NcharColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.NvarcharColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.NvarcharColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.NtextColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.NtextColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.BinaryColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.BinaryColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.VarbinaryColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.VarbinaryColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.ImageColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.ImageColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.TinyintColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.TinyintColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.SmallintColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.SmallintColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.IntColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.IntColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.BigintColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.BigintColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.DecimalColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.DecimalColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.NumericColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.NumericColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.SmallmoneyColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.SmallmoneyColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.MoneyColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.MoneyColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.FloatColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.FloatColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.RealColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.RealColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.DatetimeColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.DatetimeColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.Datetime2Column, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.Datetime2Column)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.SmalldatetimeColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.SmalldatetimeColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.DateColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.DateColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.TimeColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.TimeColumn)
                        </div>
                </div>
                <div class="form-group" >
                    @Html.LabelFor(model => model.Item.UniqueidentifierColumn, new { @class = "control-label" })
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Item.UniqueidentifierColumn)
                        </div>
                </div>
            </div>
            <div class="panel-footer nopadding">
                <div class="btn-group btn-group-justified" role="group" aria-label="...">
                    <div class="btn-group">
                        <a href="@Url.Action(UrlStringsAlias.ActionName_Organization_Edit, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = Model.Item.Id, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = default(System.Guid), isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = default(System.Guid) })" class="btn btn-default" role="button" type="button">
                            <span class="glyphicon glyphicon-edit"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Edit</span>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action(UrlStringsAlias.ActionName_Organization_Delete, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = Model.Item.Id, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = default(System.Guid), isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = default(System.Guid) })" class="btn btn-default" role="button" type="button">
                            <span class="glyphicon glyphicon-trash"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Delete</span>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action(UrlStringsAlias.ActionName_Organization_Index)" class="btn btn-default" role="button" type="button">
                            <span class="glyphicon glyphicon-ban-circle"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Back</span>
                        </a>
                    </div>
                    <div class="btn-group">
                        <a href="@Url.Action(UrlStringsAlias.ActionName_Organization_Copy, new { isToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareIdIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = Model.Item.Id, isToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareUniqueIdentifierIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = default(System.Guid), isToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint=false, valueToCompareUniqueidentifierColumnIdentifierAndUniqueConstraintOftOfIdentifierAndUniqueConstraint = default(System.Guid) })" class="btn btn-default" role="button" type="button">
                            <span class="glyphicon glyphicon-copy"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resx.UIStringResource.Copy</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
