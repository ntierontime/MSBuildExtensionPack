@using UrlStringsAlias = MSBuildExtensionPack.AspNetMvc40Rasor.Helpers.UrlStrings;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Linq.Expressions;
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using System.Web.Routing;
@using Framework.Mvc;
@using PagedList.Mvc;
@model MSBuildExtensionPack.AspNetMvc40ViewModel.WPCommonOfBuildVM
@{
    RouteValueDictionary queryStringDictionary = new RouteValueDictionary(Request.QueryString.AllKeys.ToDictionary(key => key, key => (object)Request.QueryString[key]));
}
 <div class="row">
 <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3">
        @using (Html.BeginForm())
        {
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <h3 style="display: inline;">@Framework.Resx.UIStringResource.Common_Filter</h3>
                </div>
                <div class="panel-footer nopadding">
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SearchToolBarUp" title="@Framework.Resx.UIStringResource.Search">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_AddNew, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="AddNewToolBarUp" title="@Framework.Resx.UIStringResource.AddNew">
        <span class="glyphicon glyphicon-plus"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPCommonOfBuild_Export, UrlStringsAlias.ControllerName_Build, new RouteValueDictionary { { "dataServiceType", "Csv" } })'" class="btn btn-default" role="button" type="button" name="ExportToolBarUp" title="@Framework.Resx.UIStringResource.Export">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPCommonOfBuild_Export, UrlStringsAlias.ControllerName_Build, new RouteValueDictionary { { "dataServiceType", "Excel2010" } })'" class="btn btn-default" role="button" type="button" name="ExportToExcelToolBarUp" title="@Framework.Resx.UIStringResource.ExportToExcel">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_Import, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="ImportToolBarUp" title="@Framework.Resx.UIStringResource.Import">
        <span class="glyphicon glyphicon-import"></span>
    </a>
</div>
</div>
                </div>
                <div class="panel-body">
 <div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfOrganization_2OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.Common.Organization_2Id.NullableValueToCompare, (List<SelectListItem>)Model.SelectListOfMSBuildExtensionPack_Organization, MSBuildExtensionPack.Resx.UIStringResourcePerEntityOrganization.Please_select_Organization____, new Dictionary<string,Object>{ { "class", "form-control" }, { "onchange", "FetchOrganization_1();" } })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfOrganization_1OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.Common.Organization_1Id.NullableValueToCompare, Enumerable.Empty<SelectListItem>(), MSBuildExtensionPack.Resx.UIStringResourcePerEntityOrganization.Please_select_Organization____, new Dictionary<string,Object>{ { "class", "form-control" }, { "onchange", "FetchSolution_1();" }, { "data-bind", string.Format(@"options:selectListOfOrganization_1,optionsCaption:'{0}',optionsText:'name',optionsValue:'value',value:selectedvalueOrganization_1", MSBuildExtensionPack.Resx.UIStringResourcePerEntityOrganization.Please_select_Organization____) } })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.IsToCompare_ID_CheckBox_Search_isToCompareIdCommonOfSolution_1OfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.Common.SolutionId.NullableValueToCompare, Enumerable.Empty<SelectListItem>(), MSBuildExtensionPack.Resx.UIStringResourcePerEntitySolution.Please_select_Solution____, new Dictionary<string,Object>{ { "class", "form-control" }, { "data-bind", string.Format(@"options:selectListOfSolution_1,optionsCaption:'{0}',optionsText:'name',optionsValue:'value',value:selectedvalueSolution_1", MSBuildExtensionPack.Resx.UIStringResourcePerEntitySolution.Please_select_Solution____) } })
</div>
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.IsToCompare_ID_CheckBox_Search_isToCompareBuildStartTimeCommonOftOfCommon</label>
    @Html.DropDownListFor(model => model.Criteria.Common.BuildStartTimeRange.PreDefinedDateTimeRange, Model.UISharedViewModel.PreDefinedDateTimeRangeList, new Dictionary<string, Object> { { "class", "form-control" } } )
    @Html.TextBoxFor(model => model.Criteria.Common.BuildStartTimeRange.NullableLowerBound, new { @readonly = "readonly", @class = "form-control" })
    @Html.TextBoxFor(model => model.Criteria.Common.BuildStartTimeRange.NullableUpperBound, new { @readonly = "readonly", @class = "form-control" })
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.IsToCompare_ID_CheckBox_Search_isToCompareNameCommonOftOfCommon</label>
    @Html.TextBoxFor(model=>model.Criteria.Common.Name.NullableValueToBeContained, new { @class = "form-control" })
</div>
<div class="form-group">
    <label class="control-label">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.IsToCompare_ID_CheckBox_Search_isToCompareDescriptionCommonOftOfCommon</label>
    @Html.TextBoxFor(model=>model.Criteria.Common.Description.NullableValueToBeContained, new { @class = "form-control" })
</div>
                    <div class="form-group form-inline">
                        <label class="control-label">Items per page : </label>
                        @Html.DropDownListFor(model => model.QueryPagingSetting.PageSize, Model.UISharedViewModel.SelectListOfPageSize, new Dictionary<string, Object> { { "class", "form-control" }, { "onchange", "this.form.submit();" } })
                    </div>
                    <div class="form-group form-inline">
                        <label class="control-label">Sort by:</label>
                        @Html.DropDownListFor(model => model.QueryOrderBySettingCollecionInString, Model.UISharedViewModel.SelectListOfQueryOrderBySettingCollecionInString, new Dictionary<string, Object> { { "class", "form-control" }, { "onchange", "this.form.submit();" } })
                    </div>
                </div>
                <div class="panel-footer nopadding">
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SearchToolBarBottom" title="@Framework.Resx.UIStringResource.Search">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_AddNew, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="AddNewToolBarBottom" title="@Framework.Resx.UIStringResource.AddNew">
        <span class="glyphicon glyphicon-plus"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPCommonOfBuild_Export, UrlStringsAlias.ControllerName_Build, new RouteValueDictionary { { "dataServiceType", "Csv" } })'" class="btn btn-default" role="button" type="button" name="ExportToolBarBottom" title="@Framework.Resx.UIStringResource.Export">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPCommonOfBuild_Export, UrlStringsAlias.ControllerName_Build, new RouteValueDictionary { { "dataServiceType", "Excel2010" } })'" class="btn btn-default" role="button" type="button" name="ExportToExcelToolBarBottom" title="@Framework.Resx.UIStringResource.ExportToExcel">
        <span class="glyphicon glyphicon-export"></span>
    </a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_Import, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="ImportToolBarBottom" title="@Framework.Resx.UIStringResource.Import">
        <span class="glyphicon glyphicon-import"></span>
    </a>
</div>
</div>
                </div>
            </div>
        }
 </div>
 <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9 nopadding">
        <div class="panel panel-default">
            <div class="panel-heading clearfix">
                <h3 style="display: inline;">@Html.ActionLink(MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Build, "WPCommonOfBuild", "Build")</h3>
            </div>
            <div class="table-responsive">
<table id="MasterDataControl1" name="MasterDataControl1" class="table table-hover table-bordered table-striped">
<thead>
    <tr>
<th style="min-width:100px" class="hidden-xs visible-sm"></th>
<th class="hidden-sm">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Id</th>
<th>@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.BuildStartTime</th>
<th>@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Organization_2_Name</th>
<th>@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Organization_1_Name</th>
<th class="hidden-xs">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Solution_1_Name</th>
<th class="hidden-xs">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Name</th>
<th class="hidden-sm">@MSBuildExtensionPack.Resx.UIStringResourcePerEntityBuild.Description</th>
    </tr>
</thead>
<tbody>
    @if (Model != null && Model.StatusOfResult == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
    {
        for (var i = 0; i < Model.Result.Count; i ++)
        {
            <tr>
<td><div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_WPFullDetailsOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdIdentifierOftOfIdentifier=true, valueToCompareIdIdentifierOftOfIdentifier = Model.Result[i].Id })" class="btn btn-default" role="button" type="button" name="FullDetailsToolBarRightInList" title="@Framework.Resx.UIStringResource.FullDetails">
        <span class="glyphicon glyphicon-briefcase"></span>
    </a>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_Edit, UrlStringsAlias.ControllerName_Build, new { isToCompareIdIdentifierOftOfIdentifier=true, valueToCompareIdIdentifierOftOfIdentifier = Model.Result[i].Id })" class="btn btn-default" role="button" type="button" name="EditToolBarRightInList" title="@Framework.Resx.UIStringResource.Edit">
        <span class="glyphicon glyphicon-edit"></span>
    </a>
</div>
</div>
</td>
<td class="hidden-sm">@Html.DisplayFor(model => model.Result[i].Id)</td>
<td>@Html.DisplayFor(model => model.Result[i].BuildStartTime)</td>
<td>@Html.ActionLink(Model.Result[i].Organization_2_Name, UrlStringsAlias.ActionName_Organization_WPFullDetailsOfOrganization, UrlStringsAlias.ControllerName_Organization, new { id = Model.Result[i].Organization_2Id, uniqueIdentifier = Model.Result[i].Organization_2_UniqueIdentifier }, null)</td>
<td>@Html.ActionLink(Model.Result[i].Organization_1_Name, UrlStringsAlias.ActionName_Organization_WPFullDetailsOfOrganization, UrlStringsAlias.ControllerName_Organization, new { id = Model.Result[i].Organization_1Id, uniqueIdentifier = Model.Result[i].Organization_1_UniqueIdentifier }, null)</td>
<td class="hidden-xs">@Html.ActionLink(Model.Result[i].Solution_1_Name, UrlStringsAlias.ActionName_Solution_WPFullDetailsOfSolution, UrlStringsAlias.ControllerName_Solution, new { id = Model.Result[i].SolutionId }, null)</td>
<td class="hidden-xs">@Html.DisplayFor(model => model.Result[i].Name)</td>
<td class="hidden-sm">@Html.DisplayFor(model => model.Result[i].Description)</td>
            </tr>
        }
    }
    else
    {
<tr><td colspan="50" ><div class="text-danger">@Model.StatusMessageOfResult</div>
</td></tr>
    }
</tbody>
</table>
            </div>
            <div class="pull-right">
    @if (Model.Result != null)
    {
        var pagedResult = (PagedList.StaticPagedList<MSBuildExtensionPack.DataSourceEntities.Build.Default>)ViewBag.StaticPagedResult;
        <text>
            @Html.PagedListPager(pagedResult, currentPage => Url.Action(UrlStringsAlias.ActionName_Build_WPCommonOfBuild, new { currentPage = currentPage }), PagedList.Mvc.PagedListRenderOptions.OnlyShowFivePagesAtATime)
        </text>
    }
            </div>
        </div>
 </div>
 </div>
@section Scripts {
   <script type="text/javascript">
        $(document).ready($(function() {
            $('select[name="Criteria.Common.BuildStartTimeRange.PreDefinedDateTimeRange"]').change(function () {
                preDefinedDateTimeRangeChanged('Criteria.Common.BuildStartTimeRange');
            });
            preDefinedDateTimeRangeChanged('Criteria.Common.BuildStartTimeRange');
            $('input[name="Criteria.Common.BuildStartTimeRange.NullableLowerBound"]').datepicker({
                autoclose: true,
                beforeShowDay: $.noop,
                calendarWeeks: false,
                clearBtn: false,
                daysOfWeekDisabled: [],
                endDate: Infinity,
                forceParse: true,
                format: 'mm/dd/yyyy',
                keyboardNavigation: true,
                language: 'en',
                minViewMode: 0,
                orientation: 'auto',
                rtl: false,
                startDate: -Infinity,
                startView: 2,
                todayBtn: false,
                todayHighlight: false,
                weekStart: 0
            });
            $('input[name="Criteria.Common.BuildStartTimeRange.NullableUpperBound"]').datepicker({
                autoclose: true,
                beforeShowDay: $.noop,
                calendarWeeks: false,
                clearBtn: false,
                daysOfWeekDisabled: [],
                endDate: Infinity,
                forceParse: true,
                format: 'mm/dd/yyyy',
                keyboardNavigation: true,
                language: 'en',
                minViewMode: 0,
                orientation: 'auto',
                rtl: false,
                startDate: -Infinity,
                startView: 2,
                todayBtn: false,
                todayHighlight: false,
                weekStart: 0
            });
            $('input[name="Criteria.Common.BuildStartTimeRange.NullableLowerBound"]').prop('disabled', true);
            $('input[name="Criteria.Common.BuildStartTimeRange.NullableUpperBound"]').prop('disabled', true);
        }));
        function FetchOrganization_1() {
            var url = "/api/OrganizationApi/GetCollectionOfNameValuePairByFKOnly";
            try {
                var params = BuildCriteriaForFetchOrganization_1();
                $.getJSON(url, params, function (data) {
                    objVM.selectListOfOrganization_1(data);
                    objVM.selectedOrganization_1('@Model.Criteria.Common.Organization_1Id.ValueToCompare');
                });
            }
            catch (e) {
            }
        }
        function BuildCriteriaForFetchOrganization_1() {
            var selectedvalueOrganization_2Id = $('select[name="Criteria.Common.Organization_2Id.NullableValueToCompare"]').val();
            var params = {
                parentId: selectedvalueOrganization_2Id,
                currentIndex: -1,
                pageSize: -1,
                queryOrderByExpression: null
            };
            return params;
        }
        function FetchSolution_1() {
            var url = "/api/SolutionApi/GetCollectionOfNameValuePairByFKOnly";
            try {
                var params = BuildCriteriaForFetchSolution_1();
                $.getJSON(url, params, function (data) {
                    objVM.selectListOfSolution_1(data);
                    objVM.selectedSolution_1('@Model.Criteria.Common.SolutionId.ValueToCompare');
                });
            }
            catch (e) {
            }
        }
        function BuildCriteriaForFetchSolution_1() {
            var selectedvalueOrganization_2Id = $('select[name="Criteria.Common.Organization_2Id.NullableValueToCompare"]').val();
            var selectedvalueOrganization_1Id = $('select[name="Criteria.Common.Organization_1Id.NullableValueToCompare"]').val();
            var params = {
                organization_2Id: selectedvalueOrganization_2Id,
                organizationId: selectedvalueOrganization_1Id,
                currentIndex: -1,
                pageSize: -1,
                queryOrderByExpression: null
            };
            return params;
        }
        //cascaded dropdownlist by knockoutjs
        function CascadingDDLViewModel() {
            var self = this;
            self.selectListOfOrganization_1 = ko.observableArray([]);
            self.selectedvalueOrganization_1 = ko.observable();
            self.selectListOfSolution_1 = ko.observableArray([]);
            self.selectedvalueSolution_1 = ko.observable();
        }
        var objVM = new CascadingDDLViewModel();
        ko.applyBindings(objVM);
        $('select[name="Criteria.Common.Organization_2Id.NullableValueToCompare"]').change();
    </script>
}
